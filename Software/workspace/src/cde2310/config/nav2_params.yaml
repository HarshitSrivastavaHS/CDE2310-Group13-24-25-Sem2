# Parameters for Navigation2 stack

controller_server:
  ros__parameters:
    controller_plugins: ["FollowPath"]
    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.2  # Desired linear velocity of the robot (m/s)
      lookahead_dist: 0.6      # Distance to look ahead for path following (meters)
      min_lookahead_dist: 0.3  # Minimum lookahead distance (meters)
      max_lookahead_dist: 1.0  # Maximum lookahead distance (meters)
      max_angular_vel: 0.5     # Reduce maximum angular velocity
      rotate_to_heading_angular_vel: 0.5  # Angular velocity for rotating to heading (rad/s)
      use_velocity_scaled_lookahead_dist: true

planner_server:
  ros__parameters:
    expected_planner_frequency: 10.0       # Frequency at which planning is expected (Hz)
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5                       # Tolerance in meters for goal acceptance

costmap_2d:
  global_costmap:
    ros__parameters:
      footprint: "[[0.2, 0.2], [0.2, -0.2], [-0.2, -0.2], [-0.2, 0.2]]"  # Robot footprint
      resolution: 0.05                             # Map resolution in meters per pixel
      robot_radius: 0.25                           # Radius of the robot (meters)
      inflation_radius: 0.3                        # Obstacle inflation radius (meters)
      plugins: ["obstacle_layer", "inflation_layer"]
      obstacle_layer:
        enabled: true                              # Enable obstacle detection layer
        observation_sources: "scan"
        scan:
          topic: "scan"                            # Topic for laser scan data
          max_obstacle_height: 1.5                 # Max height of obstacles (meters)
          obstacle_range: 3.0                      # Max range for obstacle detection (meters)
          raytrace_range: 3.5                      # Max range for raytracing (meters)
          clearing: true                           # Enable clearing of obstacles
      inflation_layer:
        enabled: true                              # Enable inflation layer

  local_costmap:
    ros__parameters:
      footprint: "[[0.15, 0.15], [0.15, -0.15], [-0.15, -0.15], [-0.15, 0.15]]"  # Smaller footprint for local costmap
      resolution: 0.05                             # Map resolution in meters per pixel
      robot_radius: 0.25                           # Radius of the robot (meters)
      inflation_radius: 0.3                        # Obstacle inflation radius (meters)
      plugins: ["obstacle_layer", "inflation_layer"]
      obstacle_layer:
        enabled: true                              # Enable obstacle detection layer
        observation_sources: "scan"
        scan:
          topic: "scan"                            # Topic for laser scan data
          max_obstacle_height: 1.5                 # Max height of obstacles (meters)
          obstacle_range: 3.0                      # Max range for obstacle detection (meters)
          raytrace_range: 3.5                      # Max range for raytracing (meters)
          clearing: true                           # Enable clearing of obstacles
      inflation_layer:
        enabled: true                              # Enable inflation layer

bt_navigator:
  ros__parameters:
    default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"  # Behavior tree XML file

waypoint_follower:
  ros__parameters:
    waypoint_follower_plugin: "nav2_regulated_pure_pursuit_controller::WaypointFollower"

amcl:
  ros__parameters:
    use_map_topic: false                          # Use map topic for localization updates
    scan_topic: "scan"                            # Topic for laser scan data

map_server:
  ros__parameters:
    yaml_filename: "/path/to/map.yaml"            # Path to map file if using static maps

world_model:
  ros__parameters:
    use_sim_time: true                            # Use simulation time if running in Gazebo or similar

localization_server:
  ros__parameters:
    use_sim_time: true                            # Use simulation time if running in Gazebo or similar


